@*@using System.Collections
@{

    Layout = "~/Views/Shared/_Layout.cshtml";
}

@(Html.Kendo().Grid<ExceedERP.Core.Domain.Printing.ProductionFollowUp.PrintingProductionFinishedGoodsStoreReceive>()
                      .Name("grid")
                      .Columns(columns =>
                      {
                          columns.ForeignKey(c => c.JobId, (IEnumerable)ViewData["JobOrder"], "JobId", "JobNo").EditorTemplateName("JobOrders").Title("Job No");
                          columns.ForeignKey(c => c.CustomerId, (IEnumerable)ViewData["Customers"], "Code", "Name")
                                                                 .Width("110px")
                                                                 .Title("Customer");
                          columns.Bound(c => c.VoucherNo);
                          columns.Bound(c => c.Store);
                          columns.Bound(c => c.DeliveredBy);
                          columns.Bound(c => c.ReceivedBy);
                          columns.Bound(c => c.Supervisor);
                          columns.Command(command =>
                          {
                              command.Edit();
                              command.Destroy();
                          }).Width(180);
                      })
                      .ToolBar(toolbar =>
                      {
                          toolbar.Create();
                      })
                      .Editable(editable => editable.Mode(GridEditMode.InLine))
                      .Pageable(pageable => pageable
                                         .Input(true)
                                         .Numeric(false)
                                         .Refresh(true)
                                         .PageSizes(true)
                                         .ButtonCount(5))
                                   .Filterable()
                                   .Scrollable(h => h.Height(500))
                                  .Events(ev => ev.BeforeEdit("hideColumn").Save("showColumn"))

                      .DataSource(dataSource => dataSource
                          .Ajax()
                          .Events(ev => ev.Error("error_handler(\"grid\")")
                    .RequestStart("onRequestStart(\"grid\")")
                    .RequestEnd("onRequestEnd(\"grid\")"))
                    .ServerOperation(false)
                          .Model(model => {
                              model.Id(p => p.FinishedGoodsStoreReceiveId);
                              model.Field(p => p.CustomerId).Editable(false);

                          })
                          .Read(read => read.Action("FinishedGoodReceivings_Read", "FinishedGoodReceivings"))
                          .Create(create => create.Action("FinishedGoodReceivings_Create", "FinishedGoodReceivings"))
                          .Update(update => update.Action("FinishedGoodReceivings_Update", "FinishedGoodReceivings"))
                          .Destroy(destroy => destroy.Action("FinishedGoodReceivings_Destroy", "FinishedGoodReceivings"))
                     ).ClientDetailTemplateId("Detail")
)


<script id="Detail" type="text/kendo-tmpl">
    @(Html.Kendo().TabStrip()
                                 .Name("tabstrip2_#=FinishedGoodsStoreReceiveId#")
                                .SelectedIndex(0)
                                .Items(items =>
                                {

                                    items.Add().Text("Finished Goods").Content(
                        @<text>
                            <a href='@Url.Action("FinishedGoodReceival", "ReportProductionFollowUp")/?id=#=FinishedGoodsStoreReceiveId#' target="_blank" title="Print Finished Good Receiving Form"><i class="fa fa-print fa-2x"></i></a>

                            @(Html.Kendo().Grid<ExceedERP.Core.Domain.Printing.ProductionFollowUp.FinishedGoods>()
                                                   .Name("FinishedGoods#=FinishedGoodsStoreReceiveId#")
                                                           .Columns(columns =>
                                                           {
                                                                       columns.Bound(c => c.CodeNo).Width(100);
                                                                       columns.Bound(c => c.Description).Width(100);
                                                                       columns.Bound(c => c.Unit).Width(70);
                                                                       columns.Bound(c => c.Quantity).Width(70);
                                                                       columns.Bound(c => c.Remark).Width(70);

                                                                       columns.Command(command =>
                                                           {
                                                                                   command.Edit();
                                                                                   command.Destroy();
                                                                               }).Width(150);
                                                                   })
                                                                .ToolBar(toolbar =>
                                                                {
                                                                            toolbar.Create();
                                                                        })
                                                                       .NoRecords("No Data Registered")
                                                              .Editable(editable => editable.Mode(GridEditMode.InLine).Window(window =>
                                                              {

                                                                          window.Scrollable(false);
                                                                          window.Title("Finished Goods");
                                                                      }))
                                                              .Pageable(pageable => pageable
                                                                .Refresh(true)
                                                                )

                                                          .Scrollable(h => h.Height(250))

                                                          .DataSource(dataSource => dataSource
                                                             .Ajax()
                                                                     //  .Sort(s => s.Add(x => x.ProformaId).Descending())
                                                                     .Events(events =>
                                                                     {
                                                                                 events.Error("error_handler(\"FinishedGoods#=FinishedGoodsStoreReceiveId#\")");
                                                                                 events.RequestStart("onRequestStart(\"FinishedGoods#=FinishedGoodsStoreReceiveId#\")");
                                                                                 events.RequestEnd("onRequestEnd(\"FinishedGoods#=FinishedGoodsStoreReceiveId#\")");
                                                                             }
                                                                        )

                                                                        .Model(model =>
                                                                        {
                                                                                    model.Id(p => p.FinishedGoodsId);
                                                                                    model.Field(p => p.Unit).Editable(false);
                                                                                })

                                                        .Read(read => read.Action("FinishedGoods_Read", "FinishedGoods", new { id = "#=FinishedGoodsStoreReceiveId#" }))
                                                       .Create(create => create.Action("FinishedGoods_Create", "FinishedGoods", new { id = "#=FinishedGoodsStoreReceiveId#" }))
                                                       .Update(update => update.Action("FinishedGoods_Update", "FinishedGoods"))
                                                       .Destroy(destroy => destroy.Action("FinishedGoods_Destroy", "FinishedGoods"))

                                                       ).ToClientTemplate()
                            )
                        </text>
                                                                        );



                                        }).ToClientTemplate())
</script>

<script>
    function hideColumn() {
        var grid = $('#grid').data('kendoGrid');
        grid.hideColumn('CustomerId');
    }
    function showColumn() {
        var grid = $('#grid').data('kendoGrid');
        grid.showColumn('CustomerId');
    }
</script>*@