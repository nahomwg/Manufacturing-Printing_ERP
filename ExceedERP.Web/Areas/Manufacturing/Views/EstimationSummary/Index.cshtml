

<label>Furniture Estimation Summary</label>

@(Html.Kendo().Grid<ExceedERP.Core.Domain.Manufacturing.FurnitureEstimation.EstimationSummary>()
              .Name("grid")
              .Columns(columns =>
              {
                  columns.ForeignKey(c => c.CustomerId, (IEnumerable)ViewData["Customers"], "Code", "Name").Width(110).Title("Customer");
                  columns.Command(command =>
                  {
                      command.Custom("approve").Text(" ").IconClass("fa fa-thumbs-o-up").HtmlAttributes(new { @class = "approve", title = "Approve" }).Click("approveEstimation");
                      columns.Bound(c => c.Status).Width(120);

                      command.Custom("reject").Text(" ").IconClass("fa fa-remove").HtmlAttributes(new { @class = "reject", title = "Reject" }).Click("rejectEstimation");
                  }).Width(200);
              })
              .Editable(editable => editable.Mode(GridEditMode.InLine))
              .Filterable()
              .Scrollable()
              .DataSource(dataSource => dataSource
                  .Ajax()
                  .Events(ev => ev.Error("error_handler(\"grid\")")
                    .RequestStart("onRequestStart(\"grid\")")
                    .RequestEnd("onRequestEnd(\"grid\")"))
                  .Model(model => model.Id(p => p.EstimationSummaryId))
                  .Read(read => read.Action("EstimationSummaries_Read", "EstimationSummary"))
              ).ClientDetailTemplateId("cost_estimation")

)


<script id="cost_estimation" type="text/x-kendo-template">
    @(Html.Kendo().TabStrip()
                    .Name("tab_grid_#=EstimationSummaryId#")
                    .Items(itemn =>
                    {
                        itemn.Add().Text("Detail").Content(@<text>@Detail()</text>);
                        itemn.Add().Text("Cost Summary")
                        .Content(
                            @<text>
                                <a onclick='return calculateOverallCost("#=EstimationSummaryId#")' href=' \#' title="Calculate overallcost"><i class="fa fa-plus-square fa-2x"></i></a>
                                @CostSummary()
                            </text>);
                    }).ToClientTemplate()
    )
</script>

    @helper Detail()
    {


        @(Html.Kendo().Grid<ExceedERP.Core.Domain.Manufacturing.FurnitureEstimation.EstimationDetail>()
                                  .Name("grid_#=EstimationSummaryId#")
                                  .Columns(columns =>
                                  {
                                      columns.ForeignKey(c => c.JobTypeId, (IEnumerable)ViewData["JobType"], "Value", "Text").Width(130).Title("Job Type");
                                      columns.Bound(c => c.Quantity).Width(120);
                                      columns.Bound(c => c.MaterialCost).Width(120);
                                      columns.Bound(c => c.LabourCost).Width(120);
                                      columns.Bound(c => c.OverHeadCost).Width(120);
                                      columns.Bound(c => c.ManufacturingCost).Width(120);
                                      columns.Bound(c => c.AdministrativeCost).Width(120);
                                      columns.Bound(c => c.GrandTotalCost).Width(120);
                                  })
                                  .Editable(editable => editable.Mode(GridEditMode.InLine))
                                  .Filterable()
                                  .Scrollable()
                                  .DataSource(dataSource => dataSource
                                      .Ajax()
                                      .Model(model => model.Id(p => p.EstimationDetailId))
                                      .Read(read => read.Action("EstimationDetails_Read", "EstimationDetail", new { id = "#=EstimationSummaryId#" }))
                                  ).ToClientTemplate()
        )

    }

    @helper CostSummary()
    {
                @(Html.Kendo().Grid<ExceedERP.Core.Domain.Manufacturing.FurnitureEstimation.EstimationCostSummary>()
                  .Name("grid2_#=EstimationSummaryId#")
                  .Columns(columns =>
                  {
                      columns.Bound(c => c.CommulativeCost).Width(120);
                      columns.Bound(c => c.ProfitMargin).Width(120);
                      columns.Bound(c => c.FinalPriceIncludingProfit).Width(120);
                      columns.Command(command =>
                      {
                          command.Edit().Text("Add Profit Margin");
                          command.Custom("approvemargin").Text("Approve Profit Margin").IconClass("fa fa-thumbs-up").HtmlAttributes(new { @class = "margin-approve", title = "approve margin" }).Click("approveMargin");
                          command.Destroy();
                      }).Width(350);

                  })
                  .Editable(editable => editable.Mode(GridEditMode.InLine))
                  .Filterable()
                  .Scrollable()
                  .DataSource(dataSource => dataSource
                      .Ajax()
                      .Model(model =>
                      {
                          model.Id(p => p.EstimationCostSummaryId);
                          model.Field(p => p.CommulativeCost).Editable(false);
                          model.Field(p => p.FinalPriceIncludingProfit).Editable(false);
                      })
                      .Read(read => read.Action("EstimationCostSummaries_Read", "EstimationCostSummary", new { id = "#=EstimationSummaryId#" }))
                      .Update(read => read.Action("EstimationCostSummaries_Update", "EstimationCostSummary"))
                      .Destroy(read => read.Action("EstimationCostSummaries_Update", "EstimationCostSummary"))
              ).ToClientTemplate()
    )

    }


<script type="text/javascript">
    function calculateOverallCost(id) {
        var recordStatus = "";

        $.ajax({
            type: "POST",
            url: '@Url.Action("CalculateOverAllCost", "EstimationCostSummary", new { area = "Manufacturing" })',
            data: { id: id },
            success: function (result) {
                // toastr.warnning(result.Message);
                alert(result);
                recordStatus = result.Status;
                location.reload(true);
            }, //end succ
            error: function (result) {
                alert(result);
            }
        });
    }

    function approveEstimation(e) {
            if (confirm("Are you sure to approve this estimation form?")) {
            var grid = this,
            dataItem = grid.dataItem(e.currentTarget.closest("tr"));
            $.ajax({
               type: "POST",
                url: '@Url.Action("ApproveEstimationSummary", "EstimationSummary", new { Area = "Manufacturing" })',
                data: { id: dataItem.FurnitureEstimationId },
                success: function (result) {
                    if (result.Success) {
                        toastr.success(result.Message);
                        $("#grid").data("kendoGrid").dataSource.read();
                    }
                    else {
                        toastr.error(result.Message);
                    }
           },
           error: function(result) {
               alert(result);
           }
       });
      }
    }

    function rejectEstimation(e) {
            if (confirm("Are you sure to reject this checked estimation form?")) {
             var grid = this,
            dataItem = grid.dataItem(e.currentTarget.closest("tr"));
        $.ajax({
           type: "POST",
            url: '@Url.Action("RejectEstimation", "EstimationForm", new { Area = "Printing" })',
            data: { id: dataItem.EstimationFormId },
            success: function (result) {
                if (result.Success) {
                    toastr.success(result.Message);
                    $("#grid").data("kendoGrid").dataSource.read();
                }
                else {
                    toastr.error(result.Message);

                }
           },
           error: function(result) {
               alert(result);
           }
       });
      }
    }

    function approveMargin(e) {
        if (confirm("Are you sure this estimation form is to be checked?")) {
             var grid = this,
            dataItem = grid.dataItem(e.currentTarget.closest("tr"));
        $.ajax({
           type: "POST",
            url: '@Url.Action("ApproveMargin", "EstimationCostSummary", new { Area = "Manufacturing" })',
            data: { id: dataItem.EstimationCostSummaryId },
            success: function (result) {
                if (result.Success) {
                    toastr.success(result.Message);
                    $("#grid").data("kendoGrid").dataSource.read();
                }
                else {
                    toastr.error(result.Message);

                }
           },
           error: function(result) {
               alert(result);
           }
       });
      }
    }

    function approveEstimation(e) {
            if (confirm("Are you sure to approve this estimation form?")) {
            var grid = this,
            dataItem = grid.dataItem(e.currentTarget.closest("tr"));
            $.ajax({
               type: "POST",
                url: '@Url.Action("ApproveEstimationSummary", "EstimationSummary", new { Area = "Manufacturing" })',
                data: { id: dataItem.EstimationSummaryId },
                success: function (result) {
                    if (result.Success) {
                        toastr.success(result.Message);
                        $("#grid").data("kendoGrid").dataSource.read();
                    }
                    else {
                        toastr.error(result.Message);

                    }
           },
           error: function(result) {
               alert(result);
           }
       });
        }
    }

    function rejectEstimation(e) {
            if (confirm("Are you sure to reject this checked estimation form?")) {
             var grid = this,
            dataItem = grid.dataItem(e.currentTarget.closest("tr"));
        $.ajax({
           type: "POST",
            url: '@Url.Action("RejectEstimationSummary", "EstimationSummary", new { Area = "Printing" })',
            data: { id: dataItem.EstimationSummaryId },
            success: function (result) {
                if (result.Success) {
                    toastr.success(result.Message);
                    $("#grid").data("kendoGrid").dataSource.read();
                }
                else {
                    toastr.error(result.Message);

                }
           },
           error: function(result) {
               alert(result);
           }
       });
        }
        }
</script>