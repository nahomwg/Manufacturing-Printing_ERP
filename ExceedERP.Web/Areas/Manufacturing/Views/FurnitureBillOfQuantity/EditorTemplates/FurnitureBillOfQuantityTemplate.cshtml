@model ExceedERP.Core.Domain.Manufacturing.FurnitureBillOfQuantity

<div class="row">

    <div class="col-sm-2">
        <div class="form-group">
            <label>Standard/Customize</label>

            <div>
                @(Html.Kendo().DropDownListFor(m => m.JobTypeCategory)
                    .OptionLabel("Task Type...")
                    .DataTextField("Text")
                    .DataValueField("Value")
                    .Events(e => e.Change("onJobCategoryChange"))
                    .Events(e => e.DataBound("onJobCategoryChange"))
                    .BindTo(ExceedERP.Helpers.Common.EnumExtension.EnumToSelectList(typeof(ExceedERP.Core.Domain.Manufacturing.JobTypeCategory))
                    ).HtmlAttributes(new { style = "width:100%" })
                )
            </div>
        </div>
    </div>

    <div class="col-sm-2 custom-made">
        <div class="form-group">
            <label>JobType Name</label>
            <div>
                @(Html.Kendo().TextBoxFor(model => model.JobTypeName).HtmlAttributes(new { style = "width:100%" }))
            </div>
        </div>
    </div>
    <div class="col-sm-2 custom-made">
        <div class="form-group">
            <label>Job.Code</label>
            <div>
                @(Html.Kendo().TextBoxFor(model => model.JobNo).HtmlAttributes(new { style = "width:100%" }))
            </div>
        </div>
    </div>
    
    <div class="col-sm-2 standard">
        <div class="form-group">
            <label>Type Of Job</label>
            <div>
                @(Html.Kendo().DropDownListFor(model => model.JobTypeId)
                    .ValuePrimitive(true)
                    .OptionLabel("Select Job...")
                    .DataTextField("Text")
                    .DataValueField("Value")
                    .Filter("contains")
                    .DataSource(dataSource =>
                    {
                        dataSource.Read(read => read.Action("GetStandardJobType", "ManufacturingDataProvider", new { area = "Manufacturing" }).Data("filterJobType"))
                            .ServerFiltering(true);
                    }).HtmlAttributes(new { style = "width:100%" }))
            </div>
        </div>
    </div>
    <div class="col-sm-2">
        <div class="form-group">
            <label>Customer</label>
            <div>
                @(Html.Kendo().DropDownListFor(model => model.CustomerId)
                    .ValuePrimitive(true)
                    .OptionLabel("Select Customer...")
                    .DataTextField("Text")
                    .DataValueField("Value")
                    .Filter("contains")
                    .DataSource(dataSource =>
                    {
                        dataSource.Read(read => read.Action("GetACustomers", "ManufacturingDataProvider", new { area = "Manufacturing" }).Data("filterCustomer"))
                            .ServerFiltering(true);
                    }).HtmlAttributes(new { style = "width:100%" }))
            </div>
        </div>
    </div>
    
</div>
<div class="row custom-made">
    <div class="col-sm-2">
        <div class="form-group">
            <label>Quantity</label>
            <div>
                @(Html.Kendo().TextBoxFor(model => model.Quantity).HtmlAttributes(new { style = "width:100%" }))
            </div>
        </div>
    </div>
    <div class="col-sm-2 custom-made">
        <div class="form-group">
            <label>Unit</label>
            <div>
                @(Html.Kendo().DropDownListFor(model => model.Unit)
                    .ValuePrimitive(true)
                    .OptionLabel("Select unit...")
                    .DataTextField("UoMName")
                    .DataValueField("Value")
                    .Filter("contains")

                    .DataSource(dataSource =>
                    {
                        dataSource.Read(read => read.Action("GetUoM", "ManufacturingDataProvider", new { area = "Manufacturing" }))
                            .ServerFiltering(true);
                    }).HtmlAttributes(new { style = "width:100%" }))
            </div>
        </div>
    </div>
    
</div>