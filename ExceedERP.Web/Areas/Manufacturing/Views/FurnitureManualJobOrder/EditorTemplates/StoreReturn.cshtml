@using System.Collections
@using ExceedERP.Core.Domain.Common
@using ExceedERP.Core.Domain.Finance
@using ExceedERP.Core.Domain.Inventory
@using ExceedERP.Helpers.Common
@model ExceedERP.Core.Domain.Inventory.StoreReturn

@Html.HiddenFor(model => model.StoreReturnID)

<div class="form">
    <div class="row fullrow">

        <div class="col-md-3 ro1">
            
            <div class="form-group">
                @Html.LabelFor(model => model.Reference, htmlAttributes: new { @class = "control-label col-md-8" })
                <div class="col-md-6">
                    @Html.Kendo().TextBoxFor(model => model.Reference)
                    @Html.ValidationMessageFor(model => model.Reference, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row"></div>
            
            
            <div class="row"></div>

            <div class="form-group">
                @Html.LabelFor(model => model.StoreCode, htmlAttributes: new {@class = "control-label col-md-8"})
                <div class="col-md-6">
                    @(Html.Kendo().DropDownListFor(model => model.StoreCode)
                          .ValuePrimitive(true)
                          .OptionLabel("Select Store...")
                          .DataTextField("Name")
                          .DataValueField("StoreCode")
                          .Filter("contains")
                          .DataSource(dataSource =>
                          {
                              dataSource.Read(read => read.Action("GetStoreByKeeper", "FurnitureProductionDataProvider"))
                                  .ServerFiltering(false);
                          })
                          )
                    @Html.ValidationMessageFor(model => model.StoreCode, "", new {@class = "text-danger"})
                </div>
            </div>
            <div class="row"></div>
            
            <div class="form-group">
                @Html.LabelFor(model => model.OrgStructureId, htmlAttributes: new { @class = "control-label col-md-8" })
                <div class="col-md-6">
                    @(Html.Kendo().DropDownListFor(model => model.OrgStructureId)
                          .ValuePrimitive(true)
                          .OptionLabel("Select Work Unit")
                          .DataTextField("Name")
                          .DataValueField("Code")
                          .Filter("contains")
                          .DataSource(dataSource =>
                          {
                              dataSource.Read(read => read.Action("GetWorkUnitCostCenters", "FurnitureProductionDataProvider"))
                                  .ServerFiltering(false);
                          })
                          )
                </div>
            </div>
            <div class="row"></div>
            
        </div>
        <div class="col-md-3 ro1">

            <div class="form-group">
                @Html.LabelFor(model => model.GLPeriodId, htmlAttributes: new { @class = "control-label col-md-8" })
                <div class="col-md-6">
                    @(Html.Kendo().DropDownListFor(model => model.GLPeriodId)
                                  .ValuePrimitive(true)
                                  .OptionLabel("Select Period...")
                                  .DataTextField("Name")
                                  .DataValueField("GLPeriodId")
                                  .CascadeFrom("StoreCode")
                                  .Filter("contains")
                                  .Events(e =>
                                  {
                                      e.Change("onSelectedPeriod");
                                  })
                                  .DataSource(dataSource =>
                                  {
                                      dataSource.Read(read => read.Action("GetOpenInventoryPeriodsByStore", "FurnitureProductionDataProvider").Data("filterPeriodsByStore"))
                                          .ServerFiltering(true);
                                  })
                    )
                    @Html.ValidationMessageFor(model => model.GLPeriodId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row"></div>

            <div class="form-group">
                @Html.LabelFor(model => model.ReturnDate, htmlAttributes: new { @class = "control-label col-md-8" })
                <div class="col-md-6">
                    @Html.Kendo().DatePickerFor(model => model.ReturnDate)
                    @Html.ValidationMessageFor(model => model.ReturnDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row"></div>


            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmationLetter, htmlAttributes: new { @class = "control-label col-md-8" })
                <div class="col-md-6">
                    @Html.Kendo().TextBoxFor(model => model.ConfirmationLetter)
                    @Html.ValidationMessageFor(model => model.ConfirmationLetter, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row"></div>

        </div>

        <div class="col-md-3 ro1">


            <div class="form-group">
                @Html.LabelFor(model => model.Reason, htmlAttributes: new { @class = "control-label col-md-8" })
                <div class="col-md-6">
                    @Html.Kendo().TextBoxFor(model => model.Reason)
                    @Html.ValidationMessageFor(model => model.Reason, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row"></div>
            <br />
            <div class="form-group" id="forbranchDiv" style="display: none">
                @Html.LabelFor(model => model.ForBranchId, htmlAttributes: new { @class = "control-label col-md-8" })
                <div class="col-md-6">
                    @(Html.Kendo().DropDownListFor(model => model.ForBranchId)
                                  .ValuePrimitive(true)
                                        .OptionLabel("Select Branch...")
                                        .DataTextField("Name")
                                        .DataValueField("Code")
                                        .Filter("contains")
                                        .DataSource(dataSource =>
                                        {
                                            dataSource.Read(read => read.Action("GetAllBranches", "FurnitureProductionDataProvider", new { area = "Production" }))
                                                .ServerFiltering(false);
                                        })
                    )
                    @Html.ValidationMessageFor(model => model.ForBranchId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row"></div>
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.IssueNumber, htmlAttributes: new { @class = "control-label col-md-8" })
                <div class="col-md-6">
                    @Html.Kendo().TextBoxFor(model => model.IssueNumber)
                    @Html.ValidationMessageFor(model => model.IssueNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-8" })
                <div class="col-md-6">
                    @Html.Kendo().TextBoxFor(model => model.Remark)
                    @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row"></div>

        </div>
    </div>
</div>
